
//*******************************
// Flex Layout
// Based on http://www.polymer-project.org/components/polymer/layout.html
//*******************************

.core-layout.horizontal, .core-layout.vertical {
    display: flex;
}

.core-layout.horizontal.inline, .core-layout.vertical.inline {
    display: inline-flex;
}

.core-layout.horizontal {
    flex-direction: row;
    min-height: 24px;
}

.core-layout.horizontal.reverse {
    flex-direction: row-reverse;
}

.core-layout.vertical {
    flex-direction: column;
}

.core-layout.vertical.reverse {
    flex-direction: column-reverse;
}

.core-layout.wrap {
    flex-wrap: wrap;
}

.core-layout.wrap-reverse {
    flex-wrap: wrap-reverse;
}

.flex {
    flex: 1;
}

.flex.auto {
    flex: 1 1 auto;
}

.flex.none {
    flex: none;
}

.flex.one {
    flex: 1;
}

.flex.two {
    flex: 2;
}

.flex.three {
    flex: 3;
}

.flex.four {
    flex: 4;
}

.flex.five {
    flex: 5;
}

.flex.six {
    flex: 6;
}

.flex.seven {
    flex: 7;
}

.flex.eight {
    flex: 8;
}

.flex.nine {
    flex: 9;
}

.flex.ten {
    flex: 10;
}

.flex.eleven {
    flex: 11;
}

.flex.twelve {
    flex: 12;
}

// Alignment in cross axis

.core-layout.start {
    align-items: flex-start;
}

.core-layout.center {
    align-items: center;
}

.core-layout.end {
    align-items: flex-end;
}

// Alignment in main axis

.core-layout.start-justified {
    justify-content: flex-start;
}

.core-layout.center-justified {
    justify-content: center;
}

.core-layout.end-justified {
    justify-content: flex-end;
}

.core-layout.around-justified {
    justify-content: space-around;
}

.core-layout.justified {
    justify-content: space-between;
}

// Self alignment

.self-start {
    align-self: flex-start;
}

.self-center {
    align-self: center;
}

.self-end {
    align-self: flex-end;
}

.self-stretch {
    align-self: stretch;
}
